<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GFNa/h8p0iQ/LyVfPQAAAABJRU5ErkJggg==
</value>
  </data>
</root>